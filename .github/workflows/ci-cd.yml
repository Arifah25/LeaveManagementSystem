name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      # Grant execute permissions to mvnw
      - name: Grant execute permissions to mvnw
        run: chmod +x ./mvnw

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build and test the application
      - name: Build with Maven
        run: ./mvnw clean install

  dockerize:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/leave-management-system:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      # Deploy the Docker container
      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/leave-management-system:latest
          docker stop leave-management-system || true
          docker rm leave-management-system || true
          docker run -d --name leave-management-system -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/leave-management-system:latest
          EOF
